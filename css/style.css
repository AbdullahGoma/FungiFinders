@layer reset, base;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }

  body,
  h1,
  h2,
  h3,
  h4,
  p,
  figure,
  blockquote,
  dl,
  dd {
    margin: 0;
  }

  [role="list"] {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  body {
    min-block-size: 100vh;
    line-height: 1.6;
  }

  h1,
  h2,
  h3,
  button,
  input,
  label {
    line-height: 1.1;
  }

  h1,
  h2,
  h3,
  h4 {
    text-wrap: balance;
  }

  p,
  li {
    text-wrap: pretty;
  }

  img,
  picture {
    max-inline-size: 100%;
    display: block;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
  }
}

@layer base {
  :root {
    /* colors */
    --clr-black: #000501;
    --clr-white: #ffffff;
    --clr-tan: #b6b57b;
    --clr-green: #31b28a;
    --clr-blue: #007bff;
    --clr-lightgreen: #8cdfc5;
    --clr-red: #ff4404;

    --clr-green-400: #659477;
    --clr-green-500: #3b8256;
    --clr-green-600: #23412f;
    --clr-brown-500: #423d3c;
    --clr-brown-600: #383231;
    --clr-brown-700: #2d2726;
    --clr-brown-800: #292424;
    --clr-brown-900: #221e1e;
    --clr-orange-500: #875c36;
    --clr-gray-100: #cbc9c9;
    --clr-brand-400: #f7b687;
    --clr-brand-500: #f59c5c;
    --clr-red-500: #7e3e3f;
    --clr-teal-500: #377e86;

    --shadow: rgba(0, 0, 0, 0.15) 0px 4px 12px;

    /* fonts, font sizes */

    --ff-heading: "Outfit", sans-serif;
    --ff-body: "Fira Sans", sans-serif;

    --fs-300: 0.875rem;
    --fs-400: 1rem;
    --fs-500: 1.125rem;
    --fs-600: 1.25rem;
    --fs-700: 1.5rem;
    --fs-800: 2rem;
    --fs-900: 3.75rem;
    --fs-1000: 3.75rem;

    @media (width > 760px) {
      --fs-500: 1.25rem;
      --fs-600: 1.5rem;
      --fs-700: 2rem;
      --fs-800: 3rem;
      --fs-900: 5rem;
      --fs-1000: 7.5rem;
    }
  }

  :root {
    /* color of the text */
    --text-main: var(--clr-gray-100);
    --text-high-contrast: var(--clr-white);
    --text-brand: var(--clr-brand-500);
    --text-brand-light: var(--clr-brand-400);

    /* color of the bg */
    --background-accent-light: var(--clr-green-400);
    --background-accent-main: var(--clr-green-500);
    --background-accent-dark: var(--clr-green-600);

    --background-extra-light: var(--clr-brown-500);
    --background-light: var(--clr-brown-600);
    --background-main: var(--clr-brown-700);
    --background-dark: var(--clr-brown-800);
    --background-extra-dark: var(--clr-brown-900);

    /* font size of the text */
    --font-size-heading-sm: var(--fs-700);
    --font-size-heading-regular: var(--fs-800);
    --font-size-heading-lg: var(--fs-900);
    --font-size-heading-xl: var(--fs-1000);

    --font-size-sm: var(--fs-300);
    --font-size-regular: var(--fs-400);
    --font-size-md: var(--fs-500);
    --font-size-lg: var(--fs-600);

    /* border radius size */
    --border-radius-1: 0.25rem;
    --border-radius-2: 0.5rem;
    --border-radius-3: 0.75rem;
  }

  html {
    font-family: var(--ff-body);
    line-height: 1.6;
    scroll-padding: 10rem;
  }

  @media (prefers-reduced-motion: no-preference) {
    html {
      scroll-behavior: smooth;
    }
  }

  body {
    font-size: var(--font-size-regular);
    color: var(--text-main);
    background-color: var(--background-main);
  }

  h1,
  h2,
  h3,
  h4 {
    font-family: var(--ff-heading);
    color: var(--text-high-contrast);
  }

  h1 {
    font-size: var(--font-size-heading-lg);
  }

  a {
    color: var(--text-high-contrast);
  }

  a:hover,
  a:focus-visible {
    color: var(--text-brand-light);
  }

  img:not([src$=".svg"]) {
    border-radius: var(--border-radius-3);
  }
}

@layer layout {
  .flex-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .flow > * + * {
    /* ==    > :not(:first-child)     */
    margin-top: var(--flow-spacer, 1em);
  }

  .grid-flow {
    display: grid;
    gap: var(--grid-flow-gap, 1rem);
  }

  .grid-auto-fit {
    --auto-fit-min-col-size: 250px;
    display: grid;
    gap: 1rem;
    /* minmax could cause overflow, min inside it fix that */
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(var(--auto-fit-min-col-size), 100%), 1fr)
    );
  }

  .flex-auto-fit {
    --auto-fit-min-col-size-flex: 250px;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .flex-auto-fit > * {
    flex: 1 1 var(--auto-fit-min-col-size-flex);
    min-width: var(--auto-fit-min-col-size-flex);
  }

  .equal-columns {
    display: grid;
    gap: var(--equal-columns-gap, 1rem); /* 1rem means if we don't have one */
    align-items: var(--equal-columns-vertical-alignment, stretch);

    @media (width > 760px) {
      grid-auto-flow: column;
      grid-auto-columns: 1fr;
    }

    &[data-gap="large"] {
      --equal-columns-gap: 2rem;
    }

    &[data-alignment="centered"] {
      --equal-columns-vertical-alignment: center;
    }
  }

  .flex-equal-columns {
    display: flex;
    gap: var(--equal-columns-gap, 1rem);
    flex-wrap: wrap;
    > * {
      flex: 1;
    }

    @media (width < 760px) {
      flex-direction: column;
    }

    &[data-gap="large"] {
      --equal-columns-gap: 2rem;
    }

    &[data-alignment="centered"] {
      --equal-columns-vertical-alignment: center;
    }
  }

  /* padding top and bottom */
  .section {
    --padding: 3.75rem;
    padding-block: var(--padding);

    @media (width > 760) {
      --padding: 8rem;

      &[data-padding="compact"] {
        --padding: 4.5rem;
      }
    }
  }

  /* width right and left */
  .wrapper {
    --wrapper-max-width: 1130px;
    max-width: var(--wrapper-max-width);
    margin-inline: auto;
    padding-inline: 1rem;
    box-sizing: content-box;

    &[data-width="narrow"] {
      --wrapper-max-width: 720px;
    }

    &[data-width="wide"] {
      --wrapper-max-width: 1330px;
    }
  }
}

@layer components {
  .skip-to-main:not(:focus) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .skip-to-main {
    position: absolute;
    background: var(--background-accent-main);
    padding: 1rem;
    border-radius: var(--border-radius-2);
  }

  .site-header {
    padding-block: 1rem;
  }
  .site-header__inner {
    display: flex;
    gap: 0.5rem 1rem;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  [aria-controls="primary-nav"] {
    z-index: 100;
    cursor: pointer;
    background: transparent;
    border: 0;
  }

  [aria-controls="primary-nav"] {
    display: none;
  }

  .primary-navigation {
    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem 1rem;
    }

    a {
      text-decoration: none;
    }

    @media (width < 760px) {
      display: none;
      position: absolute;
      z-index: 10;
      top: 0;
      right: 0;
      font-size: var(--font-size-lg);
      font-weight: 700;
      font-family: var(--ff-heading);
      background-color: var(--background-accent-main);
      padding: 2rem;
      border-radius: 0 0 0 var(--border-radius-3);

      ul {
        gap: 0;
        flex-direction: column;
      }

      li + li {
        margin-block-start: 1.5rem; /* margin-bottom */
        padding-block-start: 1.5rem;
        border-top: 2px solid var(--background-accent-light);
      }

      /* [aria-expanded="true"] + & {
        display: block;
      } */
    }
  }

  @media (width < 760px) {
    [aria-controls="primary-nav"] {
      display: block;
    }

    [aria-expanded="true"] + .primary-navigation {
      display: block;
    }
  }

  .site-footer {
    text-align: center;
    background-color: var(--background-dark);
    padding-block: 2rem;
    display: grid;
    gap: 2rem;

    a {
      text-decoration: none;
      color: var(--text-main);
    }

    a:hover,
    a:focus-visible {
      color: var(--text-brand-light);
    }
  }

  .site-footer__title {
    font-size: var(--font-size-md);
    font-family: var(--ff-heading);
    font-weight: 700;
  }

  .hero {
    text-align: center;
    font-size: var(--font-size-md);
    color: var(--text-high-contrast);
    background-image: url(/assets/hero.webp);
    background-size: cover;
    background-position: center;
  }

  .hero__title {
    font-size: var(--font-size-heading-lg);

    span {
      font-size: var(--font-size-heading-xl);
      color: var(--text-brand);
      display: block;
    }
  }

  .mushroom-guide {
    --card-title-font-size: var(--font-size-lg);
    --card-title-color: var(--text-high-contrast);
    --card-gap: 0.75rem;
  }

  .faq-bento {
    --card-title-color: var(--text-high-contrast);

    display: grid;
    gap: 1rem;
    grid-template-areas:
      "card-one"
      "card-two"
      "card-three"
      "card-four";

    @media (min-width: 601px) and (max-width: 900px) {
      grid-template-areas:
        "card-one card-two"
        "card-three card-four";

      .card:nth-child(even) > img {
        order: 3;
      }
    }

    @media (width > 900px) {
      grid-template-columns: repeat(3, 1fr);
      grid-template-areas:
        "card-one  card-two  card-four"
        "card-three  card-three  card-four";

      .card:nth-child(3) {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr 1fr;
      }

      .card:nth-child(3) img {
        grid-column: 1 / 2;
        grid-row: 1 / 3;
      }
    }

    .card > img {
      height: 100%;
      object-fit: cover;
    }

    .card:nth-child(1) {
      grid-area: card-one;
    }
    .card:nth-child(2) {
      grid-area: card-two;
    }
    .card:nth-child(3) {
      grid-area: card-three;
    }
    .card:nth-child(4) {
      grid-area: card-four;
    }
  }

  .card {
    display: flex;
    flex-direction: column;
    /* justify-content: space-between; */
    gap: var(--card-gap, 1rem);
    padding: 1rem;
    background-color: var(--background-light);
    border-radius: var(--border-radius-3);

    img {
      border-radius: var(--border-radius-2);
    }
  }

  .card__title {
    font-size: var(--card-title-font-size, var(--font-size-heading-sm));
    color: var(--card-title-color, var(--text-brand));
  }

  .card__note {
    margin-block-start: auto;
    background-color: var(--background-extra-light);
    padding: 0.75rem;
    border-radius: var(--border-radius-2);
  }

  /* parent of them */
  /* .equal-columns {
    --card-title-font-size: 1rem;
    --card-title-color: purple;
  } */

  /* wrap is prevent any overflow */
  .tag-list {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;

    li {
      font-family: var(--ff-heading);
      font-size: var(--font-size-sm);
      color: var(--text-high-contrast);

      padding: 0rem 0.25rem;
      background-color: var(--tag-bg, red);
      border-radius: var(--border-radius-1);
    }

    [data-edible="edible"] {
      --tag-bg: var(--background-accent-main);
    }
    [data-edible="toxic"] {
      --tag-bg: var(--clr-red-500);
    }
    [data-season="summer"] {
      --tag-bg: var(--background-accent-main);
    }
    [data-season="spring"] {
      --tag-bg: var(--clr-teal-500);
    }
    [data-season="fall"] {
      --tag-bg: var(--clr-orange-500);
    }
  }

  .button {
    display: inline-flex;
    font-size: var(--font-size-md);
    text-decoration: none;
    cursor: pointer;
    padding: 0.5rem 1rem;
    background-color: var(--background-accent-main);
    font-family: var(--ff-heading);
    font-weight: 700;
    border-radius: var(--border-radius-2);
  }

  .button:hover,
  .button:focus-visible {
    color: var(--text-high-contrast);
    background-color: var(--background-accent-light);
  }

  select {
    padding: 0.5rem;
    background-color: var(--background-accent-main);
    border: 0;
    border-radius: var(--border-radius-2);
    color: var(--text-high-contrast);
  }
  /* select,
  select::picker(select) {
    appearance: base-select;
  } */
}

@layer utilities {
  .visually-hidden {
    /* screen reader only  */
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .text-center {
    text-align: center;
  }

  .section-title {
    font-size: var(--font-size-heading-regular);
  }

  /* color of the text */
  .text-main {
    color: var(--text-main);
  }

  .text-high-contrast {
    color: var(--text-high-contrast);
  }

  .text-brand {
    color: var(--text-brand);
  }

  .text-brand-light {
    color: var(--text-brand-light);
  }

  /* color of the bg */
  .bg-main {
    background-color: var(--background-main);
  }

  .bg-accent-light {
    background-color: var(--background-accent-light);
  }

  .bg-accent-main {
    background-color: var(--background-accent-main);
  }

  .bg-accent-dark {
    background-color: var(--background-accent-dark);
  }

  .bg-extra-light {
    background-color: var(--background-extra-light);
  }

  .bg-base {
    background-color: var(--background-base);
  }

  .bg-light {
    background-color: var(--background-light);
  }

  .bg-dark {
    background-color: var(--background-dark);
  }

  .bg-extra-dark {
    background-color: var(--background-extra-dark);
  }

  /* font size of the text */
  .font-heading-sm {
    font-size: var(--font-size-heading-sm);
  }

  .font-heading-regular {
    font-size: var(--font-size-heading-regular);
  }

  .font-heading-lg {
    font-size: var(--font-size-heading-lg);
  }

  .font-heading-xl {
    font-size: var(--font-size-heading-xl);
  }

  .font-size-sm {
    font-size: var(--font-size-sm);
  }
  .font-size-regular {
    font-size: var(--font-size-regular);
  }
  .font-size-md {
    font-size: var(--font-size-md);
  }
  .font-size-lg {
    font-size: var(--font-size-lg);
  }
}

@layer filters {
  .mushroom-guide:has(#season [value="spring"]:checked) .card:not(:has([data-season="spring"])) {
      display: none;
  }

  .mushroom-guide:has(#season [value="summer"]:checked) .card:not(:has([data-season="summer"])) {
      display: none;
  }

  .mushroom-guide:has(#season [value="fall"]:checked) .card:not(:has([data-season="fall"])) {
      display: none;
  }

  .mushroom-guide:has(#edible [value="edible"]:checked) .card:not(:has([data-edible="edible"])) {
      display: none;
  }

  .mushroom-guide:has(#edible [value="toxic"]:checked) .card:not(:has([data-edible="toxic"])) {
      display: none;
  }
}